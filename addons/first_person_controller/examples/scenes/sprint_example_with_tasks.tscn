[gd_scene load_steps=5 format=3 uid="uid://c8p8wuw457okx"]

[ext_resource type="PackedScene" uid="uid://bg1ny12e2x7xb" path="res://addons/first_person_controller/examples/scenes/sprint_example.tscn" id="1_itmfs"]
[ext_resource type="PackedScene" uid="uid://cn8mw3h8uya21" path="res://addons/first_person_controller/examples/debug/bug_marker.tscn" id="2_mxw36"]
[ext_resource type="PackedScene" uid="uid://ceoedhvdnhw5x" path="res://addons/first_person_controller/examples/tasks/regr_tests_20231024.tscn" id="3_vnc1i"]
[ext_resource type="PackedScene" uid="uid://cddcchs3rw6qe" path="res://addons/first_person_controller/examples/tasks/archived_20231025.tscn" id="4_tpljx"]

[node name="sprint_example_with_tasks" type="Node3D"]

[node name="FirstPersonTest" parent="." instance=ExtResource("1_itmfs")]

[node name="Tasks" type="Node3D" parent="."]

[node name="Active" type="Node3D" parent="Tasks"]

[node name="bug_marker_00063" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22, 3.5, 22.25)
description = "Fix: can mantle up collider that has another collider stacked"
details = "Probably due to raycasts not detecting collision from inside. Need another collision detection method."
task_type = "BUG"
priority = 2

[node name="bug_marker_00064" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14.25, 0, 34)
description = "Fix: sometimes mantle causes character to hit head in overhead obstacles"
details = "Mantle should only add the jump force if the path overhead is clear. Check overhead clearance detection vs jump height applied by mantle"
task_type = "BUG"

[node name="bug_marker_00066" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 7, 0, 17.5)
description = "Reimplement mantle reusing step up code. See details."
details = "Refactor step up code to take step height as argument.

Mantle code calls it and, if step found, uses step results to calculate the mantle jump height and add jump force. Or temporarily disables movement code, uses results to lerp character up ledge, then re-enables movement code"
task_type = "BUG"

[node name="bug_marker" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 14.75)
description = "Implement step detection movement test with get_real_velocity()"
details = "... instead of velocity, removing the velocity \"up nudge\" hack for ramps.
Test with all edge cases.

Update: didn't work. The alternative is to find a different mechanism to exclude ramps from step up detection. Maybe run detection code but don't step up if direction of step up movement is almost the same as direction of velocity projected on floor normal."
task_type = "TECHNICAL_IMPROVEMENT"

[node name="bug_marker2" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.25, 0, 14.75)
description = "Remove crouch node or refactor movement_controller code into it"
details = "Currently, all relevant crouch code is inside movement_controller"
task_type = "TECHNICAL_IMPROVEMENT"

[node name="bug_marker3" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16.5, 19, 21.25)
description = "Add climb down mechanic"
task_type = "FEATURE"
priority = 2

[node name="bug_marker4" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6.25, 0, 14.75)
description = "Make turns also subject to acceleration limits, maybe with increased values for sharper turns like in Quake's implementation"
task_type = "FEATURE"

[node name="bug_marker5" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 0, 14.25)
description = "Implement faster deceleration if drop detected ahead"
details = "Like Quake. Code already exists for this in walk script. Move it to movement_controller, add new exports for edge deceleration and fall protection deceleration (the latter is used if fall protection is enabled - for instance, in walk mode)"
task_type = "FEATURE"
priority = 2

[node name="bug_marker7" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -9.75, 2.25, -9.25)
description = "Fix: step up does not work when sliding along wall perpendicular to step"
details = "Because step detection happens in the direction of travel specified by player input. To cater for this case, we need to move_and_slide first, then, if hit, detect step up with remainder of travel after last collision. If not hit, detect step down"
task_type = "BUG"
priority = 2

[node name="bug_marker6" parent="Tasks/Active" instance=ExtResource("2_mxw36")]
description = "Update task meshes for the new types"
task_type = "POLISH"

[node name="Regression Tests" type="Node3D" parent="Tasks"]
visible = false

[node name="Regr Tests 20231024" parent="Tasks/Regression Tests" instance=ExtResource("3_vnc1i")]

[node name="Archived" type="Node3D" parent="Tasks"]
visible = false

[node name="Archived 20231025" parent="Tasks/Archived" instance=ExtResource("4_tpljx")]
